plugins {
    id 'java-gradle-plugin'
    id 'groovy'
}

//wrapper {
//    gradleVersion = "5.6.4"
//}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.amazonaws:aws-java-sdk-ecr:1.12.43"

    testImplementation 'org.spockframework:spock-core:2.3-groovy-2.5'
    testImplementation gradleTestKit()
}

gradlePlugin {
    // Define the plugin
    plugins {
        ecrToken {
            id = 'com.fuseanalytics.gradle.ecrToken'
            implementationClass = 'com.fuseanalytics.aws.ecr.EcrTokenPlugin'
        }
    }
}

pluginBundle {
    website = "https://github.com/chubbard/ecr-token-plugin"
    vcsUrl = "https://github.com/chubbard/ecr-token-plugin.git"
    description = """
        This gradle plugin is a 100% portable solution for generating an AWS ECR 
        (Elastic Container Repository) token that can be used to authenticate your 
        build with ECR.  For example, use this plugin with the Jib plugin to enable
        painless container build process that has no external dependencies or 
        complex setup.  Allowing you to setup a Jib container build with AWS ECR in 
        minutes.
    """

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
        version = project.version
    }

    plugins {
        ecrToken {
            displayName = 'AWS ECR Token Plugin'
            tags = ['aws', 'ecr', 'docker']
        }
    }
}


// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}
